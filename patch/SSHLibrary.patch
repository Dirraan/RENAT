diff -uprN SSHLibrary.org/abstractclient.py SSHLibrary/abstractclient.py
--- SSHLibrary.org/abstractclient.py	2018-08-28 01:24:29.818487919 +0900
+++ SSHLibrary/abstractclient.py	2018-08-24 11:04:18.296360980 +0900
@@ -116,7 +116,7 @@ class AbstractSSHClient(object):
         self._shell = None
         self.client.close()
 
-    def login(self, username, password, delay=None, look_for_keys=False):
+    def login(self, username, password, delay=None, look_for_keys=False, proxy_cmd=None):
         """Logs into the remote host using password authentication.
 
         This method reads the output from the remote host after logging in,
@@ -144,7 +144,7 @@ class AbstractSSHClient(object):
         username = self._encode(username)
         password = self._encode(password)
         try:
-            self._login(username, password, look_for_keys=look_for_keys)
+            self._login(username, password, look_for_keys=look_for_keys, proxy_cmd=proxy_cmd)
         except SSHClientException:
             raise SSHClientException("Authentication failed for user '%s'."
                                      % self._decode(username))
diff -uprN SSHLibrary.org/library.py SSHLibrary/library.py
--- SSHLibrary.org/library.py	2018-08-28 01:24:29.818487919 +0900
+++ SSHLibrary/library.py	2018-08-24 12:59:26.301452704 +0900
@@ -817,7 +817,7 @@ class SSHLibrary(object):
             self._log(str(c), self._config.loglevel)
         return configs
 
-    def login(self, username, password, delay='0.5 seconds'):
+    def login(self, username, password, delay='0.5 seconds', proxy_cmd=None):
         """Logs into the SSH server with the given ``username`` and ``password``.
 
         Connection must be opened before using this keyword.
@@ -839,7 +839,7 @@ class SSHLibrary(object):
         | ${output}=        | `Login`          | johndoe          | secretpasswd |
         | `Should Contain`  | ${output}        | johndoe@linux:~$ |
         """
-        return self._login(self.current.login, username, password, delay)
+        return self._login(self.current.login, username, password, delay, False, proxy_cmd)
 
     def login_with_public_key(self, username, keyfile, password='',
                               allow_agent=False, look_for_keys=False,
diff -uprN SSHLibrary.org/pythonclient.py SSHLibrary/pythonclient.py
--- SSHLibrary.org/pythonclient.py	2018-08-28 01:24:29.818487919 +0900
+++ SSHLibrary/pythonclient.py	2018-08-24 13:00:10.478453290 +0900
@@ -66,9 +66,21 @@ class PythonSSHClient(AbstractSSHClient)
         paramiko.util.log_to_file(path)
         return True
 
-    def _login(self, username, password, look_for_keys=False):
+    def _login(self, username, password, look_for_keys=False, proxy_cmd=None):
         try:
-            self.client.connect(self.config.host, self.config.port, username,
+    #        self.client.connect(self.config.host, self.config.port, username,
+    #                            password, look_for_keys=look_for_keys,
+    #                            allow_agent=look_for_keys,
+    #                            timeout=float(self.config.timeout))
+            if proxy_cmd:
+                proxy = paramiko.ProxyCommand(proxy_cmd)
+                self.client.connect(self.config.host, self.config.port, username,
+                                password,look_for_keys=look_for_keys,
+                                allow_agent=look_for_keys,
+                                timeout=float(self.config.timeout),
+                                sock=proxy)
+            else:
+                self.client.connect(self.config.host, self.config.port, username,
                                 password, look_for_keys=look_for_keys,
                                 allow_agent=look_for_keys,
                                 timeout=float(self.config.timeout))
